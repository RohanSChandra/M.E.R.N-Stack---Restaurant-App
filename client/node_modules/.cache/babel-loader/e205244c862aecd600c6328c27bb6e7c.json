{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/Code/02-project---reservationizr-app-part-2---manage-reservations-RohanSChandra/client/src/components/CreateReservation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./CreateReservation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateReservation = ({\n  restaurantName\n}) => {\n  _s();\n\n  const [date, setDate] = useState(new Date());\n  const [partySize, setpartySize] = useState(\"\");\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [errorStatus, setErrorStatus] = useState(false);\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const accessToken = await getAccessTokenSilently();\n    setIsLoading(true);\n    const formPage = {\n      date,\n      partySize,\n      restaurantName\n    };\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/reservations`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(formPage)\n    });\n\n    if (!response.ok) {\n      setIsError(true);\n      setErrorStatus(response.status);\n    } else {\n      setIsLoading(false);\n      navigate(\"/reservations\");\n    }\n  };\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error creating a reservation (error status \", errorStatus, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"button\",\n        children: \"Return to Restaurants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"reserve-restaurant\",\n      children: [\"Reserve \", restaurantName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"numberofguests\",\n        children: \"Number of guests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"numberofguests\",\n        min: \"0\",\n        className: \"form-input\",\n        required: true,\n        value: partySize,\n        onChange: e => setpartySize(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        className: \"form-input\",\n        id: \"date\",\n        selected: date,\n        onChange: date => setDate(date),\n        minDate: new Date(),\n        showTimeSelect: true,\n        dateFormat: \"Pp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-reservations-submit-btn\",\n        disabled: isLoading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateReservation, \"OVkXf185T9NZ1G6f4f749O8bhZw=\", false, function () {\n  return [useNavigate, useAuth0];\n});\n\n_c = CreateReservation;\nexport default CreateReservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateReservation\");","map":{"version":3,"sources":["/Users/rohan/Code/02-project---reservationizr-app-part-2---manage-reservations-RohanSChandra/client/src/components/CreateReservation.js"],"names":["React","useState","useNavigate","Link","DatePicker","useAuth0","CreateReservation","restaurantName","date","setDate","Date","partySize","setpartySize","navigate","isLoading","setIsLoading","isError","setIsError","errorStatus","setErrorStatus","getAccessTokenSilently","handleSubmit","e","preventDefault","accessToken","formPage","response","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","body","JSON","stringify","ok","status","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./CreateReservation.css\";\n\nconst CreateReservation = ({ restaurantName }) => {\n  const [date, setDate] = useState(new Date());\n  const [partySize, setpartySize] = useState(\"\");\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [errorStatus, setErrorStatus] = useState(false);\n  const { getAccessTokenSilently } = useAuth0();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const accessToken = await getAccessTokenSilently();\n    setIsLoading(true);\n\n    const formPage = { date, partySize, restaurantName };\n\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/reservations`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n        body: JSON.stringify(formPage),\n      }\n    );\n    if (!response.ok) {\n      setIsError(true);\n      setErrorStatus(response.status);\n    } else {\n      setIsLoading(false);\n      navigate(\"/reservations\");\n    }\n  };\n  if (isError) {\n    return (\n      <>\n        <p>Error creating a reservation (error status {errorStatus})</p>\n        <Link to=\"/\" className=\"button\">\n          Return to Restaurants\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2 className=\"reserve-restaurant\">Reserve {restaurantName}</h2>\n      <form onSubmit={handleSubmit}>\n        <label className=\"form-label\" htmlFor=\"numberofguests\">\n          Number of guests\n        </label>\n        <input\n          type=\"number\"\n          id=\"numberofguests\"\n          min=\"0\"\n          className=\"form-input\"\n          required\n          value={partySize}\n          onChange={(e) => setpartySize(e.target.value)}\n        />\n        <label className=\"form-label\" htmlFor=\"date\">\n          Date\n        </label>\n        <DatePicker\n          className=\"form-input\"\n          id=\"date\"\n          selected={date}\n          onChange={(date) => setDate(date)}\n          minDate={new Date()}\n          showTimeSelect\n          dateFormat=\"Pp\"\n        />\n        <button className=\"create-reservations-submit-btn\" disabled={isLoading}>\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default CreateReservation;\n"]},"metadata":{},"sourceType":"module"}