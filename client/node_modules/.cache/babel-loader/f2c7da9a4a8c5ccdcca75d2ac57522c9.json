{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/Code/02-project---reservationizr-app-part-2---manage-reservations-RohanSChandra/client/src/components/ReservationList.js\",\n    _s = $RefreshSig$();\n\nimport \"./ReservationList.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { formatDate } from \"../utils/formatDate\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReservationList = () => {\n  _s();\n\n  const [reservationList, setReservationList] = useState([]);\n  const [isNotFound, setIsNotFound] = useState(true);\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  useEffect(() => {\n    const fetchData = async () => {\n      const accessToken = await getAccessTokenSilently();\n      const response = await fetch(`http://localhost:5001/reservations`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n\n      if (response.ok === false) {\n        setIsNotFound(true);\n      }\n\n      const data = await response.json();\n      setReservationList(data);\n    };\n\n    fetchData();\n  }, [getAccessTokenSilently]);\n\n  if (isNotFound) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have any reservations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"View the restaurants \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upcoming reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reservationList.map(reservation => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: reservation.restaurantName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formatDate(reservation.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/reservations/${reservation.id}`,\n            children: \"View details \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, reservation.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ReservationList, \"G7qoysOx0zxu2mPcBcxf/AMAEMU=\", false, function () {\n  return [useAuth0];\n});\n\n_c = ReservationList;\nexport default ReservationList; // if the reservation list which is an array is empty [], show the message you do not have any reservations... else map the reservaion list\n\nvar _c;\n\n$RefreshReg$(_c, \"ReservationList\");","map":{"version":3,"sources":["/Users/rohan/Code/02-project---reservationizr-app-part-2---manage-reservations-RohanSChandra/client/src/components/ReservationList.js"],"names":["React","useState","useEffect","useAuth0","formatDate","Link","ReservationList","reservationList","setReservationList","isNotFound","setIsNotFound","getAccessTokenSilently","fetchData","accessToken","response","fetch","headers","Authorization","ok","data","json","map","reservation","restaurantName","date","id"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM;AAAEU,IAAAA;AAAF,MAA6BR,QAAQ,EAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC5B,YAAMC,WAAW,GAAG,MAAMF,sBAAsB,EAAhD;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAF,EAAuC;AACjEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAD9B;AADwD,OAAvC,CAA5B;;AAKA,UAAIC,QAAQ,CAACI,EAAT,KAAgB,KAApB,EAA2B;AACzBR,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AACD,YAAMS,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAZ,MAAAA,kBAAkB,CAACW,IAAD,CAAlB;AACD,KAZD;;AAaAP,IAAAA,SAAS;AACV,GAfQ,EAeN,CAACD,sBAAD,CAfM,CAAT;;AAiBA,MAAIF,UAAJ,EAAgB;AACd,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,eAAe,CAACc,GAAhB,CAAqBC,WAAD,IAAiB;AACpC,4BACE;AAAA,kCACE;AAAA,sBAAIA,WAAW,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAInB,UAAU,CAACkB,WAAW,CAACE,IAAb;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,iBAAgBF,WAAW,CAACG,EAAG,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASH,WAAW,CAACG,EAArB;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkBD,CAjDD;;GAAMnB,e;UAG+BH,Q;;;KAH/BG,e;AAmDN,eAAeA,eAAf,C,CAEA","sourcesContent":["import \"./ReservationList.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { formatDate } from \"../utils/formatDate\";\nimport { Link } from \"react-router-dom\";\n\nconst ReservationList = () => {\n  const [reservationList, setReservationList] = useState([]);\n  const [isNotFound, setIsNotFound] = useState(true);\n  const { getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const accessToken = await getAccessTokenSilently();\n      const response = await fetch(`http://localhost:5001/reservations`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      if (response.ok === false) {\n        setIsNotFound(true);\n      }\n      const data = await response.json();\n      setReservationList(data);\n    };\n    fetchData();\n  }, [getAccessTokenSilently]);\n\n  if (isNotFound) {\n    return (\n      <>\n        <p>You don't have any reservations.</p>\n        <Link to=\"/\">View the restaurants &rarr;</Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1>Upcoming reservations</h1>\n      <ul>\n        {reservationList.map((reservation) => {\n          return (\n            <li key={reservation.id}>\n              <p>{reservation.restaurantName}</p>\n              <p>{formatDate(reservation.date)}</p>\n              <Link to={`/reservations/${reservation.id}`}>\n                View details &rarr;\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default ReservationList;\n\n// if the reservation list which is an array is empty [], show the message you do not have any reservations... else map the reservaion list\n"]},"metadata":{},"sourceType":"module"}