{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/Code/02-project---reservationizr-app-part-2---manage-reservations-RohanSChandra/client/src/components/CreateReservation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./CreateReservation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateReservation = ({\n  restaurantName\n}) => {\n  _s();\n\n  const [date, setDate] = useState(new Date());\n  const [partySize, setpartySize] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const accessToken = await getAccessTokenSilently();\n    const formPage = {\n      date,\n      partySize,\n      restaurantName\n    };\n    console.log(accessToken);\n    await fetch(\"http://localhost:5001/reservations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`\n      },\n      body: JSON.stringify(formPage)\n    }).then(() => {\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Reserve \", restaurantName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numberofguests\",\n        children: \"Number of guests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"text\",\n        required: true,\n        value: partySize,\n        onChange: e => setpartySize(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: date,\n        onChange: date => setDate(date),\n        minDate: new Date() // minimum time?? how would you do that?\n        ,\n        showTimeSelect: true,\n        dateFormat: \"Pp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateReservation, \"RB77PqwPBAFdwMyvSuxfnI7k/zc=\", false, function () {\n  return [useNavigate, useAuth0];\n});\n\n_c = CreateReservation;\nexport default CreateReservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateReservation\");","map":{"version":3,"sources":["/Users/rohan/Code/02-project---reservationizr-app-part-2---manage-reservations-RohanSChandra/client/src/components/CreateReservation.js"],"names":["React","useState","useNavigate","DatePicker","useAuth0","CreateReservation","restaurantName","date","setDate","Date","partySize","setpartySize","navigate","getAccessTokenSilently","handleSubmit","e","preventDefault","accessToken","formPage","console","log","fetch","method","headers","Authorization","body","JSON","stringify","then","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,4CAAP;AACA,OAAO,yBAAP;;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAIQ,IAAJ,EAAD,CAAhC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAA6BT,QAAQ,EAA3C;;AAEA,QAAMU,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,WAAW,GAAG,MAAMJ,sBAAsB,EAAhD;AACA,UAAMK,QAAQ,GAAG;AAAEX,MAAAA,IAAF;AAAQG,MAAAA,SAAR;AAAmBJ,MAAAA;AAAnB,KAAjB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,UAAMI,KAAK,CAAC,oCAAD,EAAuC;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASP,WAAY;AAF9B,OAFuC;AAMhDQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,QAAf;AAN0C,KAAvC,CAAL,CAOHU,IAPG,CAOE,MAAM;AACZhB,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KATK,CAAN;AAUD,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAA,6BAAaN,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEQ,YAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,KAAK,EAAEJ,SAJT;AAKE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,YAAY,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAEvB,IADZ;AAEE,QAAA,QAAQ,EAAGA,IAAD,IAAUC,OAAO,CAACD,IAAD,CAF7B;AAGE,QAAA,OAAO,EAAE,IAAIE,IAAJ,EAHX,CAIE;AAJF;AAKE,QAAA,cAAc,MALhB;AAME,QAAA,UAAU,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAyBD,CAhDD;;GAAMJ,iB;UAGaH,W,EACkBE,Q;;;KAJ/BC,iB;AAkDN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./CreateReservation.css\";\n\nconst CreateReservation = ({ restaurantName }) => {\n  const [date, setDate] = useState(new Date());\n  const [partySize, setpartySize] = useState(\"\");\n  const navigate = useNavigate();\n  const { getAccessTokenSilently } = useAuth0();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const accessToken = await getAccessTokenSilently();\n    const formPage = { date, partySize, restaurantName };\n    console.log(accessToken);\n    await fetch(\"http://localhost:5001/reservations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify(formPage),\n    }).then(() => {\n      navigate(\"/\");\n    });\n  };\n\n  return (\n    <>\n      <h1>Reserve {restaurantName}</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"numberofguests\">Number of guests</label>\n        <input\n          type=\"text\"\n          id=\"text\"\n          required\n          value={partySize}\n          onChange={(e) => setpartySize(e.target.value)}\n        />\n        <label htmlFor=\"date\">Date</label>\n        <DatePicker\n          selected={date}\n          onChange={(date) => setDate(date)}\n          minDate={new Date()}\n          // minimum time?? how would you do that?\n          showTimeSelect\n          dateFormat=\"Pp\"\n        />\n        <button>Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default CreateReservation;\n"]},"metadata":{},"sourceType":"module"}