{"version":3,"sources":["auth/ProtectedRoute.js","logo.png","components/LoginButton.js","components/Header.js","utils/formatDate.js","components/Reservation.js","components/ReservationList.js","components/RestaurantList.js","components/CreateReservation.js","components/Restaurant.js","App.js","reportWebVitals.js","auth/Auth0ProviderWithHistory.js","index.js"],"names":["withAuthenticationRequired","onRedirecting","LoginButton","useAuth0","loginWithRedirect","logout","isAuthenticated","isLoading","className","onClick","returnTo","window","location","origin","Header","to","src","Logo","alt","width","formatDate","date","format","Date","Reservation","id","useParams","useState","reservation","setReservation","setIsLoading","getAccessTokenSilently","useEffect","a","accessToken","fetchUrl","fetch","headers","Authorization","response","json","data","fetchData","error","restaurantName","partySize","ReservationList","reservationList","setReservationList","length","map","RestaurantList","restaurantList","setRestaurantList","restaurant","image","name","description","CreateReservation","setDate","setpartySize","navigate","useNavigate","isError","setIsError","errorStatus","setErrorStatus","handleSubmit","e","preventDefault","formPage","method","body","JSON","stringify","ok","status","onSubmit","htmlFor","type","min","required","value","onChange","target","selected","minDate","showTimeSelect","dateFormat","disabled","Restaurant","setRestaurant","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Auth0ProviderWithHistory","children","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","audience","REACT_APP_AUTH0_AUDIENCE","redirectUri","onRedirectCallback","appState","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b7bf12.chunk.js","sourcesContent":["import { Outlet } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\n\nconst ProtectedRoute = () => <Outlet />;\n\nexport default withAuthenticationRequired(ProtectedRoute, {\n  onRedirecting: () => <p>Loading</p>,\n});\n","export default __webpack_public_path__ + \"static/media/logo.68074af1.png\";","import \"./LoginButton.css\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect, logout, isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <p>Loading login details...</p>;\n  }\n\n  if (isAuthenticated) {\n    return (\n      <button\n        className=\"btn-login\"\n        onClick={() => logout({ returnTo: window.location.origin })}\n      >\n        Log Out\n      </button>\n    );\n  }\n\n  return (\n    <button className=\"btn-login\" onClick={() => loginWithRedirect()}>\n      Log In\n    </button>\n  );\n};\n\nexport default LoginButton;\n","import \"./Header.css\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../logo.png\";\nimport LoginButton from \"./LoginButton\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"header-title\">\n          <img src={Logo} alt=\"\" width=\"300\" />\n        </Link>\n        <ul className=\"nav\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              Restaurants\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/reservations\" className=\"nav-link\">\n              My reservations\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <LoginButton />\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { format } from \"date-fns\";\n\nconst formatDate = (date) => format(new Date(date), \"h:mmaaa EEE d LLL, yyyy\");\n\nexport { formatDate };\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { formatDate } from \"../utils/formatDate\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport \"./Reservation.css\";\n\nconst Reservation = () => {\n  const { id } = useParams();\n  const [reservation, setReservation] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const { getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const accessToken = await getAccessTokenSilently();\n      const fetchUrl = `http://localhost:5001/reservations/${id}`;\n      const response = await fetch(fetchUrl, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      const data = await response.json();\n      setReservation(data);\n\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [id, getAccessTokenSilently]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  if (reservation.error) {\n    return (\n      <>\n        <h3 className=\"error-message\">Sorry! We can't find that reservation</h3>\n        <Link to=\"/reservations\" className=\"reservation-only-button\">\n          &larr; Back to reservations\n        </Link>\n      </>\n    );\n  }\n  return (\n    <>\n      <div key={reservation.id}>\n        <div>\n          <h2>{reservation.restaurantName}</h2>\n          <p>{formatDate(reservation.date)}</p>\n          <p className=\"reservation-only-party-size\">\n            <strong> Party Size: </strong> {reservation.partySize}\n          </p>\n\n          <Link to=\"/reservations\" className=\"reservation-only-button\">\n            &larr; Back to reservations\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Reservation;\n","import \"./ReservationList.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { formatDate } from \"../utils/formatDate\";\nimport { Link } from \"react-router-dom\";\n\nconst ReservationList = () => {\n  const [reservationList, setReservationList] = useState([]);\n  const { getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const accessToken = await getAccessTokenSilently();\n      const response = await fetch(`http://localhost:5001/reservations`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      const data = await response.json();\n      setReservationList(data);\n    };\n    fetchData();\n  }, [getAccessTokenSilently]);\n\n  if (reservationList.length === 0) {\n    return (\n      <>\n        <h1>Upcoming reservations</h1>\n        <p>You don't have any reservations.</p>\n        <Link to=\"/\" className=\"reservation-list-view-details\">\n          View the restaurants\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1>Upcoming reservations</h1>\n      <ul>\n        {reservationList.map((reservation) => {\n          return (\n            <li\n              key={reservation.id}\n              className=\"reservation-list-grid-container\"\n            >\n              <p className=\"reservation-list-name\">\n                {reservation.restaurantName}\n              </p>\n\n              <p className=\"reservation-list-date\">\n                {formatDate(reservation.date)}\n              </p>\n              <Link\n                to={`/reservations/${reservation.id}`}\n                className=\"reservation-list-view-details\"\n              >\n                View details &rarr;\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default ReservationList;\n","import \"./RestaurantList.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RestaurantList = () => {\n  const [restaurantList, setRestaurantList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`http://localhost:5001/restaurants`);\n      const data = await response.json();\n      setRestaurantList(data);\n    };\n    fetchData();\n  }, []);\n  return (\n    <>\n      <h1>Restaurants</h1>\n      <ul>\n        {restaurantList.map((restaurant) => {\n          return (\n            <li key={restaurant.id} className=\"restaurant-list-grid-container\">\n              <img\n                src={restaurant.image}\n                className=\"restaurant-list-image\"\n                alt=\"pictureoffood\"\n              ></img>\n              <div>\n                <h2 className=\"restaurant-list-name\">{restaurant.name}</h2>\n                <p className=\"restaurant-list-description\">\n                  {restaurant.description}\n                </p>\n                <Link\n                  className=\"restaurant-list-reserve-now\"\n                  to={`/restaurants/${restaurant.id}`}\n                >\n                  Reserve Now &rarr;\n                </Link>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default RestaurantList;\n","import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./CreateReservation.css\";\n\nconst CreateReservation = ({ restaurantName }) => {\n  const [date, setDate] = useState(new Date());\n  const [partySize, setpartySize] = useState(\"\");\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [errorStatus, setErrorStatus] = useState(false);\n  const { getAccessTokenSilently } = useAuth0();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const accessToken = await getAccessTokenSilently();\n    setIsLoading(true);\n\n    const formPage = { date, partySize, restaurantName };\n\n    const response = await fetch(\"http://localhost:5001/reservations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify(formPage),\n    });\n    if (!response.ok) {\n      setIsError(true);\n      setErrorStatus(response.status);\n    } else {\n      setIsLoading(false);\n      navigate(\"/reservations\");\n    }\n  };\n  if (isError) {\n    return (\n      <>\n        <p>Error creating a reservation (error status {errorStatus})</p>\n        <Link to=\"/\" className=\"button\">\n          Return to Restaurants\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2 className=\"reserve-restaurant\">Reserve {restaurantName}</h2>\n      <form onSubmit={handleSubmit}>\n        <label className=\"form-label\" htmlFor=\"numberofguests\">\n          Number of guests\n        </label>\n        <input\n          type=\"number\"\n          id=\"numberofguests\"\n          min=\"0\"\n          className=\"form-input\"\n          required\n          value={partySize}\n          onChange={(e) => setpartySize(e.target.value)}\n        />\n        <label className=\"form-label\" htmlFor=\"date\">\n          Date\n        </label>\n        <DatePicker\n          className=\"form-input\"\n          id=\"date\"\n          selected={date}\n          onChange={(date) => setDate(date)}\n          minDate={new Date()}\n          showTimeSelect\n          dateFormat=\"Pp\"\n        />\n        <button className=\"create-reservations-submit-btn\" disabled={isLoading}>\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default CreateReservation;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CreateReservation from \"./CreateReservation\";\nimport \"./Restaurant.css\";\n\nconst Restaurant = () => {\n  const { id } = useParams();\n  const [restaurant, setRestaurant] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchUrl = `http://localhost:5001/restaurants/${id}`;\n      const response = await fetch(fetchUrl);\n      const data = await response.json();\n      setRestaurant(data);\n\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [id]);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <div key={restaurant.id} className=\"restaurant-grid-container\">\n        <img\n          src={restaurant.image}\n          className=\"restaurant-image\"\n          alt=\"pictureoffood\"\n        ></img>\n        <div>\n          <h1 className=\"restaurant-name\">{restaurant.name}</h1>\n          <p className=\"restaurant-description\">{restaurant.description}</p>\n        </div>\n      </div>\n      <CreateReservation restaurantName={restaurant.name} />\n    </>\n  );\n};\n\nexport default Restaurant;\n","import \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ProtectedRoute from \"./auth/ProtectedRoute\";\nimport Header from \"./components/Header\";\nimport Reservation from \"./components/Reservation\";\nimport ReservationList from \"./components/ReservationList\";\nimport RestaurantList from \"./components/RestaurantList\";\nimport Restaurant from \"./components/Restaurant\";\n\nconst App = () => {\n  const { isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/restaurants/:id\" element={<ProtectedRoute />}>\n            <Route path=\"/restaurants/:id\" element={<Restaurant />} />\n          </Route>\n          <Route path=\"/reservations/:id\" element={<ProtectedRoute />}>\n            <Route path=\"/reservations/:id\" element={<Reservation />} />\n          </Route>\n          <Route path=\"/reservations\" element={<ProtectedRoute />}>\n            <Route path=\"/reservations\" element={<ReservationList />} />\n          </Route>\n          <Route path=\"/\" element={<RestaurantList />} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useNavigate } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const navigate = useNavigate();\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n\n  const onRedirectCallback = (appState) => {\n    navigate(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./auth/Auth0ProviderWithHistory\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Auth0ProviderWithHistory>\n        <App />\n      </Auth0ProviderWithHistory>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}